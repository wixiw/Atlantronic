<!-- Use this to deploy the motion control nodes for autonomous modes  launch-prefix="xterm -e gdb args" and put two "-" before args -->
<launch>
	<include file="$(find arp_core)/script/ros/launch/machines.launch"/>
	
	<node name="Command" 	pkg="arp_ods" 	type="CommandNode" 		args="" output="screen"/>
	
	<node name="MotionControl"  pkg="arp_ods"  type="MotionControlNode"    args="" output="screen" > 
		<!--velocity at final point (m/s)  -->
    	<param name="VEL_FINAL"  value="0.000" /> 
    	
    	<!--Proportional Gain on angle error (without unity)  -->
	    <param name="ROTATION_GAIN" value="5.0"/> 
	    <!--Derivative Gain on angle error derivative (without unity)  -->
	    <param name="ROTATION_D_GAIN" value="0.4"/> 
		<!--Gain on translation (without unity)  -->
	    <param name="TRANSLATION_GAIN" value="1.0" /> 
		<!--The fantom coefficient. means the distance of the fantom point to the final point. 
		set it to 0, it will be as if you always try to go directly to final point. 
		set it to 0.9, your robot will make big curve to reach the final point with the right angle. --> 
	    <param name="FANTOM_COEF"  value="0" />
	    
		<!--distance where you are in mode approaching point (m)  -->
		<param name="RADIUS_APPROACH_ZONE"  value="0.015" />
		<!--timeout before exiting pass mode if no other order is received  -->
		<param name="PASS_TIMEOUT"  value="0.5" />
		<!--timeout before exiting to error  -->
		<param name="ORDER_TIMEOUT"  value="10" />
		<!--timeout when wheel are blocked to cancel order (in s)  -->
		<param name="WHEEL_BLOCKED_TIMEOUT"  value="0.5" />
		
		<!--Order is succeed if (and only if) the current position is near the goal with distance_accuracy_ precision.-->
	    <param name="DISTANCE_ACCURACY" value="0.005"  />
		<!-- Order is succeed if (and only if) the current orientation is near the goal with angle_accuracy_ precision-->
	    <param name="ANGLE_ACCURACY" value="0.01"  />
	 </node> 
</launch>
