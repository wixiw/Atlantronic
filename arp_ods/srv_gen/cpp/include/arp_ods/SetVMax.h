/* Auto-generated by genmsg_cpp for file /opt/ros/ard/arp_ods/srv/SetVMax.srv */
#ifndef ARP_ODS_SERVICE_SETVMAX_H
#define ARP_ODS_SERVICE_SETVMAX_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace arp_ods
{
template <class ContainerAllocator>
struct SetVMaxRequest_ : public ros::Message
{
  typedef SetVMaxRequest_<ContainerAllocator> Type;

  SetVMaxRequest_()
  : vMax(0.0)
  , setToDefault(false)
  {
  }

  SetVMaxRequest_(const ContainerAllocator& _alloc)
  : vMax(0.0)
  , setToDefault(false)
  {
  }

  typedef double _vMax_type;
  double vMax;

  typedef uint8_t _setToDefault_type;
  uint8_t setToDefault;


private:
  static const char* __s_getDataType_() { return "arp_ods/SetVMaxRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "84953976940388b2a4dbffc8e04d3822"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "84953976940388b2a4dbffc8e04d3822"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "float64 vMax\n\
bool setToDefault\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, vMax);
    ros::serialization::serialize(stream, setToDefault);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, vMax);
    ros::serialization::deserialize(stream, setToDefault);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(vMax);
    size += ros::serialization::serializationLength(setToDefault);
    return size;
  }

  typedef boost::shared_ptr< ::arp_ods::SetVMaxRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::arp_ods::SetVMaxRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct SetVMaxRequest
typedef  ::arp_ods::SetVMaxRequest_<std::allocator<void> > SetVMaxRequest;

typedef boost::shared_ptr< ::arp_ods::SetVMaxRequest> SetVMaxRequestPtr;
typedef boost::shared_ptr< ::arp_ods::SetVMaxRequest const> SetVMaxRequestConstPtr;


template <class ContainerAllocator>
struct SetVMaxResponse_ : public ros::Message
{
  typedef SetVMaxResponse_<ContainerAllocator> Type;

  SetVMaxResponse_()
  {
  }

  SetVMaxResponse_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "arp_ods/SetVMaxResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "84953976940388b2a4dbffc8e04d3822"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::arp_ods::SetVMaxResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::arp_ods::SetVMaxResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct SetVMaxResponse
typedef  ::arp_ods::SetVMaxResponse_<std::allocator<void> > SetVMaxResponse;

typedef boost::shared_ptr< ::arp_ods::SetVMaxResponse> SetVMaxResponsePtr;
typedef boost::shared_ptr< ::arp_ods::SetVMaxResponse const> SetVMaxResponseConstPtr;

struct SetVMax
{

typedef SetVMaxRequest Request;
typedef SetVMaxResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetVMax
} // namespace arp_ods

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::arp_ods::SetVMaxRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "84953976940388b2a4dbffc8e04d3822";
  }

  static const char* value(const  ::arp_ods::SetVMaxRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x84953976940388b2ULL;
  static const uint64_t static_value2 = 0xa4dbffc8e04d3822ULL;
};

template<class ContainerAllocator>
struct DataType< ::arp_ods::SetVMaxRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "arp_ods/SetVMaxRequest";
  }

  static const char* value(const  ::arp_ods::SetVMaxRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::arp_ods::SetVMaxRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float64 vMax\n\
bool setToDefault\n\
\n\
";
  }

  static const char* value(const  ::arp_ods::SetVMaxRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::arp_ods::SetVMaxRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::arp_ods::SetVMaxResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::arp_ods::SetVMaxResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::arp_ods::SetVMaxResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "arp_ods/SetVMaxResponse";
  }

  static const char* value(const  ::arp_ods::SetVMaxResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::arp_ods::SetVMaxResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
";
  }

  static const char* value(const  ::arp_ods::SetVMaxResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::arp_ods::SetVMaxResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::arp_ods::SetVMaxRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.vMax);
    stream.next(m.setToDefault);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetVMaxRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::arp_ods::SetVMaxResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetVMaxResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<arp_ods::SetVMax> {
  static const char* value() 
  {
    return "84953976940388b2a4dbffc8e04d3822";
  }

  static const char* value(const arp_ods::SetVMax&) { return value(); } 
};

template<>
struct DataType<arp_ods::SetVMax> {
  static const char* value() 
  {
    return "arp_ods/SetVMax";
  }

  static const char* value(const arp_ods::SetVMax&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<arp_ods::SetVMaxRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "84953976940388b2a4dbffc8e04d3822";
  }

  static const char* value(const arp_ods::SetVMaxRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<arp_ods::SetVMaxRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "arp_ods/SetVMax";
  }

  static const char* value(const arp_ods::SetVMaxRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<arp_ods::SetVMaxResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "84953976940388b2a4dbffc8e04d3822";
  }

  static const char* value(const arp_ods::SetVMaxResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<arp_ods::SetVMaxResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "arp_ods/SetVMax";
  }

  static const char* value(const arp_ods::SetVMaxResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ARP_ODS_SERVICE_SETVMAX_H

