runScript("/opt/ros/ard/arp_core/script/orocos/deployment/deploy_arp_core.ops");
print.log(Warning, "Début déploiment arp_hml");

import("arp_hml");

/** LOAD COMPONENTS **/
print.log(Warning, " == Loading HML components == ");
runScript("/opt/ros/ard/arp_hml/script/orocos/deployment/other/LoadOther.ops")
runScript("/opt/ros/ard/arp_hml/script/orocos/deployment/can/LoadCan.ops")

/** CONNECT COMPONENTS **/
print.log(Warning, " == Connecting HML components == ");
runScript("/opt/ros/ard/arp_hml/script/orocos/deployment/other/ConnectOther.ops")
runScript("/opt/ros/ard/arp_hml/script/orocos/deployment/can/ConnectCan.ops")

/** START COMPONENTS **/
print.log(Warning, " == Starting HML components == ");
runScript("/opt/ros/ard/arp_hml/script/orocos/deployment/other/StartOther.ops")
runScript("/opt/ros/ard/arp_hml/script/orocos/deployment/can/StartCan.ops")

//enabling drive
//en attendant que quelqu'un d'autre le fasse
var bool deployed_successfully = Protokrot.ooSetMotorPower(true, 1.000);

if( !Can1.isRunning() || !Io.isRunning() || !LeftDriving.isRunning() || !RightDriving.isRunning() 
		|| !Protokrot.isRunning() || !deployed_successfully) then
{
	print.log(Warning, "====================");
	print.log(Fatal, "!*%$#@&!*%$#@&!*%$#@&!*%$#@&!*%$#@&!*%$#@&");
	print.log(Fatal, "       Fail to deploy HML !");
	print.log(Fatal, "!*%$#@&!*%$#@&!*%$#@&!*%$#@&!*%$#@&!*%$#@&");
	print.log(Warning, "====================");
	deployed_successfully = false;
}
else
{
	print.log(Warning, "====================");
	print.log(Warning, "Fin déploiment arp_hml OK");
	print.log(Warning, "HML in version : " + Protokrot.coGetHmlVersion);
	print.log(Warning, "====================");
	deployed_successfully = true;
}

Reporting.reportPort ("Protokrot","outLeftSpeedCmd");
Reporting.reportPort ("Protokrot","outRightSpeedCmd");
Reporting.reportPort ("LeftDriving","outComputedSpeed");
Reporting.reportPort ("RightDriving","outComputedSpeed");